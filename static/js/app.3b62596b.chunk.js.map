{"version":3,"sources":["components/request.js","components/Gallery.js","App.js"],"names":["request","require","doRequest","options","Promise","resolve","reject","error","res","body","statusCode","get","url","a","async","method","json","headers","fetchLoli","response","console","log","GalleryScreen","useState","lists","setLists","useEffect","App","document","title","Gallery"],"mappings":"8KAAMA,G,2BAAUC,EAAQ,MAExB,SAASC,EAAUC,GACjB,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GACpCN,EAAQG,GAAS,SAAUI,EAAOC,EAAKC,GAChCF,GAA2B,KAAlBC,EAAIE,WAGhBJ,EAAOC,GAFPF,EAAQI,SAQhB,SAAeE,EAAIC,GAAnB,iBAAAC,EAAAC,OAAA,uDACQX,EAAU,CACdS,IAAKA,EACLG,OAAQ,MACRC,MAAM,EACNC,QAAS,IALb,WAAAJ,EAAA,MAQoBX,EAAUC,IAR9B,cAQQK,EARR,yBASSA,GATT,4D,YCoDA,SAAeU,IAAf,eAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACuBF,EAAI,wDAD3B,cACMQ,EADN,OAEEC,QAAQC,IAAIF,GAFd,kBAGSA,GAHT,4DAoBeG,MAdf,WACE,MAAwBC,oBAAS,GAAjC,WAAKC,EAAL,KAAYC,EAAZ,KAMA,OALAC,qBAAU,oBAAAb,EAAAC,OAAA,kEAAAD,EAAA,MACMK,KADN,OACRM,EADQ,OAERC,EAASD,GACTJ,QAAQC,IAAIG,GAHJ,8DAIR,IAEA,yBC3EW,SAASG,IAItB,OAHAD,qBAAU,WACPE,SAASC,MAAQ,wBACjB,IAED,8BACE,cAACC,EAAD,Q","file":"static/js/app.3b62596b.chunk.js","sourcesContent":["const request = require('request');\r\n\r\nfunction doRequest(options) {\r\n  return new Promise(function (resolve, reject) {\r\n    request(options, function (error, res, body) {\r\n      if (!error && res.statusCode == 200) {\r\n        resolve(body);\r\n      } else {\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nasync function get(url) {\r\n  const options = {\r\n    url: url,\r\n    method: 'GET',\r\n    json: true,\r\n    headers: {\r\n    }\r\n  };\r\n  const res = await doRequest(options);\r\n  return res;\r\n}\r\n\r\nexport { get };","import React, { useState, useEffect } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport photo_wall from './photo_wall.json';\r\nimport $ from 'jquery';\r\nimport { get } from './request';\r\n\r\nfunction Img({src, handler, index}) {\r\n  return (\r\n    <div className=\"wrap\" onClick={() => handler(index)}>\r\n      <LazyLoadImage src={src} className=\"photo\" effect=\"blur\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ViewSource({src}) {\r\n  return (\r\n    <a href={src} className=\"original\" onClick={(e) => e.stopPropagation()} target=\"_blank\">\r\n     オリジナル\r\n    </a>\r\n  );\r\n}\r\n\r\nfunction Description({info}) {\r\n  return (\r\n    <div className=\"photo_info\" onClick={(e) => e.stopPropagation()}>\r\n      <span>\r\n        {info}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction GalleryScreen_o({route, navigation}) {\r\n  $('a[href^=http]').attr(\"target\", \"_blank\");\r\n  const [state, setState] = useState('out');\r\n  const stateHandler = (state) => {\r\n    setState(state);\r\n  }\r\n  // scrollWith([]);\r\n  const google_prefix = \"https://drive.google.com/uc?export=view&id=\";\r\n  const google_thumb_prefix = \"https://lh3.googleusercontent.com/fife/\";\r\n  let photos = [];\r\n  let cnt = 0;\r\n  for (const google_object of photo_wall.google) {\r\n    const src = (google_thumb_prefix + google_object.thumb);\r\n    photos.push(<Img src={src} key={`photo${cnt}`} handler={stateHandler} index={cnt} />);\r\n    cnt ++;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"photo_container\">\r\n        {photos}\r\n      </div>\r\n      {state !== 'out' && \r\n        <div onClick={() => setState('out')} className=\"photo_zoom_container\">\r\n          <LazyLoadImage src={google_thumb_prefix + photo_wall.google[state].thumb} className=\"photo_zoom\" effect=\"blur\" />\r\n          <ViewSource src={google_prefix + photo_wall.google[state].id} />\r\n          <Description info={photo_wall.google[state].info} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nasync function fetchLoli() {\r\n  let response = await get(\"https://api.lolicon.app/setu/v2?size=regular&num=15\");\r\n  console.log(response);\r\n  return response;\r\n}\r\n\r\nfunction GalleryScreen() {\r\n  let [lists, setLists] = useState(false);\r\n  useEffect(async () => {\r\n    lists = await fetchLoli();\r\n    setLists(lists);\r\n    console.log(lists);\r\n  },[]);\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GalleryScreen;","import React, { useEffect} from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { GalleryScreen } from './components';\n\nexport default function App() {\n  useEffect(() => {\n     document.title = \"Kガチャ\";  \n  }, []);\n  return (\n    <div>\n      <GalleryScreen />\n    </div>\n  );\n}"],"sourceRoot":""}